<?xml version="1.0"?>

<project name="Coaccess" default="default" basedir=".">

  <property file="${basedir}/build.properties" />


  <property name="src.dir" value="java"/>
  <property name="lib.dir" value="lib"/>
  <property name="build.dir" value="../build"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="javadoc.dir" value="../javadoc"/>

  <!-- The base name for the Jar file etc to be created -->
  <property name="final.name" value="coaccess"/>


  <!-- the name of the web application we are building -->
  <property name="app.name"       value="coaccess"/>

  <!-- where the web app is going to be deployed -->
  <property name="tomcat.home6"  value="/usr/share/tomcat6" />
  <property name="tomcat.home7"  value="/usr/share/tomcat7" />
  <condition property="tomcat.home" 
	     value="${tomcat.home7}" else="${tomcat.home6}">
    <available file="${tomcat.home7}"/>
  </condition>
  <property name="deploy.home"    value="${tomcat.home}/webapps/${app.name}"/>
  <!-- Our web application's library directory  -->
  <property name="deploy.lib"      value="${deploy.home}/WEB-INF/lib" />

  <!-- Tomcat JAR files needed during compilation -->
  <property name="tomcat.lib"     value="${tomcat.home}/lib"/>



  <!-- Classpath -->
  <path id="classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${tomcat.lib}">  <!-- Tomcat JAR files, local copy -->
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- Make destination directories -->
  <target name="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${javadoc.dir}"/>
    <mkdir  dir="${deploy.home}/META-INF"/>
    <mkdir  dir="${deploy.home}/WEB-INF"/>
    <mkdir  dir="${deploy.lib}"/>
  </target>    

  <!-- By default make a jar file, and make the documentation -->
  <target name="default" depends="jar,javadoc"/>
<!--  <target name="default" depends="war,javadoc"/> -->

  <!-- Compile the Java files -->
  <target name="compile" depends="init">
    <!-- encoding="${build.encoding}" 
	 debug="${debug}"
     optimize="${optimize}"
     deprecation="${deprecation}"
-->
    <javac 
     srcdir="${src.dir}"
     includes="edu/cornell/cs/osmot/*/*/*.java,edu/cornell/cs/osmot/*/*.java"
     destdir="${build.classes}"
     debuglevel="lines,vars,source">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- Make the javadoc documentation -->
  <target name="javadoc" depends="init">
<!-- "http://lucene.apache.org/java/docs/api"/ -->
    <javadoc 
     sourcepath="${src.dir}"
     destdir="${javadoc.dir}"
     packagenames="edu.cornell.cs.osmot.*"
     private="false">
      <link href="http://lucene.apache.org/core/4_5_0/core/"/>
      <classpath refid="classpath"/>
    </javadoc>
  </target>

  <!-- Make the searcher jar file -->
  <target name="jar" depends="compile">
    <jar
      jarfile="${build.dir}/${final.name}.jar"
      basedir="${build.classes}"
    />
  </target>


<!-- web site deployment -->
<target name="deploy"  depends="init,jar">
  <copy  file="osmot.conf" todir="${deploy.home}/WEB-INF"/>
  <copy  file="WEB-INF/web.xml" todir="${deploy.home}/WEB-INF"/>

  <copy  file="${build.dir}/${final.name}.jar" todir="${deploy.lib}"/> 
 
  <copy todir="${deploy.lib}">
    <fileset dir="${lib.dir}"><include name="**/*.jar"/></fileset>
   </copy>
 
  <echo message="Copying files from web/ to ${deploy.home}" />
  <copy todir="${deploy.home}">
    <fileset dir="web" excludes=".svn" />
  </copy>

</target>

<property name="reloadclass" value="org.apache.catalina.ant.ReloadTask"/>
<!-- The reload URL under Tomcat7 is different from Tomcat6 and 5.5 -->
<condition property="reload.url" 
	   value="http://localhost:8080/manager/text"
	   else="http://localhost:8080/manager">
  <available file="${tomcat.home7}"/>
</condition>


<taskdef name="reload"    classname="${reloadclass}"
	 classpathref="classpath"/>
  
<!-- The user list, with roles, is stored in /usr/local/tomcat/conf/tomcat-users.xml -->
<target name="reload" description="Reload web application on localhost"
        depends="deploy">
  <reload url="${reload.url}" username="vmenkov2" password="vmenkov2-manager-script" path="/${app.name}"/>
</target>

  <!-- Make the searcher war file -->
<!--
  <target name="war" depends="jar">
     <copy todir="${web.src.dir}/config" file="${basedir}/osmot.conf"/>	 
     <copy todir="${web.src.dir}/config" file="${basedir}/author_popularity.txt"/>
     <copy todir="${web.src.dir}/config" file="${basedir}/feature.conf"/>
     <copy todir="${web.src.dir}/logs" file="${basedir}/.htaccess"/>  
     <copy todir="${web.src.dir}" file="${basedir}/.htaccess"/>  	
     <war destfile="${build.dir}/${final.name}.war"
         webxml="${web.src.dir}/web.xml">
      <fileset dir="${web.src.dir}" excludes="web.xml"/>
      <fileset file="storeWeights.txt" />
      <fileset file="results.txt" />
      <lib dir="${lib.dir}" includes="colt.jar"/>
      <lib dir="${lib.dir}" includes="commons-*.jar"/>
      <lib dir="${lib.dir}" includes="concurrent-(.jar"/>
      <lib dir="${lib.dir}" includes="dom4j-*.jar"/>
      <lib dir="${lib.dir}" includes="jaf-*.jar"/>
      <lib dir="${lib.dir}" includes="jakarta-oro-*.jar"/>
      <lib dir="${lib.dir}" includes="junit-*.jar"/>
      <lib dir="${lib.dir}" includes="lucene-*.jar"/>
      <lib dir="${lib.dir}" includes="mysql-connector-java-*-bin.jar"/>
      <lib dir="${lib.dir}" includes="servlet-*.jar"/>
      <lib dir="${lib.dir}" includes="taglibs-*.jar"/>
      <lib dir="${lib.dir}" includes="xerces-*.jar"/>
      <lib dir="${lib.dir}" includes="arpack_combo-*.jar"/>
      <lib dir="${lib.dir}" includes="mtj-*.jar"/>
      <lib dir="${lib.dir}" includes="netlib-java-*.jar"/>
      <lib dir="${build.dir}" includes="${final.name}.jar"/>
    </war>
  </target>     
-->
	
  <!-- Install in tomcat -->
<!--
  <target name="install" depends="war">
    <exec dir="${basedir}" executable="${tomcat.stop.script}">
    	<arg line="${tomcat.stop.args}"/>
    </exec>
    <sleep seconds="2"/>	
  	<delete dir="${tomcat.dir}/webapps/ROOT"/>
  	<delete file="${tomcat.dir}/webapps/ROOT.war"/>
  	<copy file="${build.dir}/${final.name}.war" tofile="${tomcat.dir}/webapps/ROOT.war"/>
    <exec dir="${basedir}" executable="${tomcat.start.script}">
    	<arg line="${tomcat.start.args}"/>
    </exec>	
  </target>
-->
  
  <!-- Create a tarball for distribution -->
<!--
  <target name="distrib" depends="jar">
    <delete dir="${distrib.name}"/>
    <mkdir dir="${distrib.name}"/>
    <copy todir="${distrib.name}/java">
      <fileset dir="java">
        <exclude name="**/*.class"/>
      </fileset>
    </copy>
    <copy todir="${distrib.name}/jsp">
      <fileset dir="jsp"/>
    </copy>
    <copy todir="${distrib.name}">
      <fileset file="LICENSE.txt"/>
      <fileset file="*.html"/>
      <fileset file="build.xml"/>
      <fileset file="build.properties"/>
      <fileset file="osmot.conf"/>
    </copy>
    <mkdir dir="${distrib.name}/lib"/>
    <mkdir dir="${distrib.name}/build"/>
    <copy todir="${distrib.name}/build">
      <fileset file="build/${final.name}.jar"/>
    </copy>
    <exec executable="tar">
        <arg line="-zcvf"/>
        <arg line="${distrib.name}.tar.gz"/>
        <arg line="${distrib.name}"/>
    </exec>
  </target>
-->


		
  <!-- Clean up -->
  <target name="clean" depends="init">
    <delete dir="${build.classes}"/>
    <delete file="${build.dir}/${final.name}.jar"/>
<!--
    <delete dir="${class.dir}"/>
    <delete dir="${distrib.name}"/>
    <delete file="${distrib.name}.tar.gz"/>
-->
  </target>

</project>
